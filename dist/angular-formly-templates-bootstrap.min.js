!function(a,b){"function"==typeof define&&define.amd?define(["angular"],function(c){return a.returnExportsGlobal=b(c)}):"object"==typeof exports?module.exports=b(require("angular")):b(a.angular)}(this,function(a){return a.module("formlyBootstrap",["formly"],["formlyConfigProvider",function(b){"use strict";function c(a){return"fields/formly-field-"+a+".html"}b.setWrapper([{name:"bootstrapLabel",templateUrl:"wrappers/formly-wrappers-bootstrap-label.html"},{name:"bootstrapHasError",templateUrl:"wrappers/formly-wrappers-bootstrap-has-error.html"}]);var d=["bootstrapLabel","bootstrapHasError"];a.forEach(["radio","select"],function(a){b.setType({name:a,templateUrl:c(a),wrapper:d})}),b.setType({name:"input",template:'<input class="form-control" ng-model="model[options.key]">',wrapper:d}),b.setType({name:"textarea",template:'<textarea class="form-control" ng-model="model[options.key]"></textarea>',wrapper:d,defaultOptions:{data:{ngModelAttributes:{rows:"rows",cols:"cols"}}}}),b.setType({name:"checkbox",templateUrl:c("checkbox"),wrapper:["bootstrapHasError"]}),b.templateManipulators.preWrapper.push(function(b,c,d){if(c.templateOptions&&a.isDefined(c.templateOptions.description)&&"radio"!==c.type&&"checkbox"!==c.type){var e=a.element("<a></a>");e.append(b);var f=a.element(e[0].querySelectorAll("[ng-model]"));return f?(e.append('<p id="'+d.id+'_description"class="help-block"ng-if="options.templateOptions.description">{{options.templateOptions.description}}</p>'),f.attr("aria-describedby",d.id+"_description"),e.html()):b}return b})}]),a.module("formlyBootstrap").run(["formlyConfig","$http","$templateCache",function(a,b,c){a.templateManipulators.preWrapper.push(function(a,b){if("input"!==b.type||!b.templateOptions.addonLeft&&!b.templateOptions.addonRight)return a;var d=c.get("other/formly-other-bootstrap-addons.html");return d.replace("<formly-transclude></formly-transclude>",a)})}]),a.module("formlyBootstrap").run(["$templateCache",function(a){"use strict";a.put("fields/formly-field-checkbox.html","<div class=checkbox><label><input type=checkbox class=formly-field-checkbox ng-model=model[options.key]> {{options.templateOptions.label}} {{options.templateOptions.required ? '*' : ''}}</label></div>"),a.put("fields/formly-field-radio.html",'<div class=radio-group><div ng-repeat="(key, option) in options.templateOptions.options" class=radio><label><input type=radio id="{{id + \'_\'+ $index}}" ng-value=option.value ng-model=model[options.key]> {{option.name}}</label></div></div>'),a.put("fields/formly-field-select.html",'<select class=form-control ng-model=model[options.key] ng-options="option.value as option.name group by option.group for option in options.templateOptions.options"></select>'),a.put("wrappers/formly-wrappers-bootstrap-has-error.html","<div class=form-group ng-class=\"{'has-error': options.formControl.$invalid && options.formControl.$touched}\"><formly-transclude></formly-transclude></div>"),a.put("wrappers/formly-wrappers-bootstrap-label.html","<div><label for={{id}} class=control-label>{{options.templateOptions.label}} {{options.templateOptions.required ? '*' : ''}}</label><formly-transclude></formly-transclude></div>"),a.put("other/formly-other-bootstrap-addons.html","<div ng-class=\"{'input-group': to.addonLeft || to.addonRight}\"><div class=input-group-addon ng-if=to.addonLeft><i class={{to.addonLeft.class}} ng-if=to.addonLeft.class></i> <span ng-if=to.addonLeft.text>{{to.addonLeft.text}}</span></div><formly-transclude></formly-transclude><div class=input-group-addon ng-if=to.addonRight><i class={{to.addonRight.class}} ng-if=to.addonRight.class></i> <span ng-if=to.addonRight.text>{{to.addonRight.text}}</span></div></div>")}]),"formlyBootstrap"});
//# sourceMappingURL=angular-formly-templates-bootstrap.min.map